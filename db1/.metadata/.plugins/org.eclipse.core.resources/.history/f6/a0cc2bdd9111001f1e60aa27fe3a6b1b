-- CONNECTION: url=jdbc:oracle:thin:@//localhost:1521/XE




-- New script in SCOTT.
-- Connection Type: dev 
-- Url: jdbc:oracle:thin:@//localhost:1521/XE
-- workspace : C:\Users\dkswl\OneDrive\Documents\code_upload\Auto_window\multi_it\backend\db\db1
-- Date: 2024. 5. 14.
-- Time: 오전 9:05:50



--서브쿼리(SubQuery)
/*하나의 SQL 문안에 포함되어있는 또다른 SQL 문
알려지지 않은 조건에 근거한 값들을 검색하는 SELECT 문장을 작성하는데 유용함
메인쿼리가 서브쿼리를 포함하는 종속적인 관계
서브쿼리는 반드시 소괄호 로 묶어야함
-> (SELECT...) 형태
*/

-- 사람명인 스미스인 사람의 부서와 같은 부서인 사람들을 조회

SELECT *
FROM emp;


SELECT DEPTNO 
FROM emp
WHERE ENAME ='SMITH';


SELECT *
FROM emp
WHERE DEPTNO = 20;

SELECT *
FROM emp
WHERE DEPTNO = (SELECT DEPTNO 
				FROM emp
				WHERE ENAME ='SMITH');


-- 전 직원의 평균 급여보다 많은 급여를 받고 있는 직원의
-- 정보를 조회

SELECT 
	EMPNO , ENAME , JOB , SAL 
FROM 
	EMP
WHERE 
	SAL > (SELECT AVG(SAL) 
			FROM EMP);

--서브쿼리의 유형
--단일행 서브쿼리 : 서브쿼리의 조회 결과값이 1개 행일때
--다중행 서브쿼리 : 서브쿼리의 조회 결과값의 행이 여러개일때
--다중열 서브쿼리 : 서브쿼리의 조회 결과값의 컬럼이 여러개일때
--다중행 다중열 서브쿼리 : 조회경로가 행 수와 열수가 여러개일때
--상(호연)관서브쿼리 : 서브쿼리가 만든 결과값을 메인쿼리가 비교 연산할때 
--                  메인쿼리의 값이 변경되면 서브쿼리의 결과값도 바뀌는 서브쿼리 
--스칼라 서브쿼리 : 상관쿼리이면서 결과값이 하나인 서브쿼리 

--* 서브쿼리의 유형에 따라 서브쿼리 앞에 붙은 연산자가 다름

--1. 단일행 서브쿼리 
-- 단일행서브쿼리앞에는 일반비교 연산자사용
-- >,<,>=,<=,=, !=,<>,^= (서브쿼리)
		

--SMITH 사원의 급여보다 많이 받는 직원의 
--사번, 이름 , 부서명, 급여를 조회하세요 
		
/*SELECT 
	EMPNO , ENAME , DEPTNO,  SAL 
FROM 
	EMP
WHERE 
	SAL > (SELECT SAL 
			FROM EMP
			WHERE ENAME='SMITH');*/
		
		
SELECT A.EMPNO 사번
		, A.ENAME 이름
		, B.DNAME 부서
		, A.SAL 급여
FROM EMP A
LEFT JOIN DEPT B ON A.DEPTNO = B.DEPTNO 
WHERE A.SAL > (SELECT SAL
				FROM EMP
				WHERE ENAME = 'SMITH')
		
			
			
-- 가장 적은 급여를 받는 직원의
-- 사번, 이름, 부서명, 급여 조회하세요		
/*
SELECT 
	EMPNO , ENAME, DEPTNO,  SAL 
FROM 
	EMP
WHERE 
	SAL = (SELECT MIN(SAL) 
			FROM EMP);*/
		
		
		
SELECT A.EMPNO 사번
		, A.ENAME 이름
		, B.DNAME 부서
		, A.SAL 급여
FROM EMP A
LEFT JOIN DEPT B ON A.DEPTNO = B.DEPTNO 
WHERE A.SAL = (SELECT MIN(SAL)
				FROM EMP);

			
			
-- 서브쿼리는 SELECT, FROM, WHERE, HAVING, ORDER BY(서브쿼리내부에 포함은 안됨) 에도 사용 가능			
			

-- 부서별 급여의 합계 가 가장 큰 부서의 부서명, 급여 합계를 구하세요
		


SELECT B.DEPTNO , B.DNAME, SUM(A.SAL) 급여합계
FROM EMP A
INNER JOIN DEPT B ON A.DEPTNO = B.DEPTNO 
GROUP BY B.DEPTNO, B.DNAME 
HAVING SUM(A.SAL) = (SELECT MAX(SUM(SAL))
					FROM EMP
					GROUP BY DEPTNO);

--2. 다중행 서브쿼리 
-- 다중행 서브쿼리 앞에서는 일반 비교 연산자를 사용 할수 없다
-- IN / NOT IN : 여러개의 결과값 중에서 한개라도 일치하는 값이 있다면 , 혹은 없다면 이라는 의미
-- > ANY, < ANY : 여러개의 결과값중에서 한개라도 큰 / 작은 경우 - 가장 작은 값보다 크냐? /가장 큰 값보다 작냐?
-- > ALL, < ALL : 모든값 보다 큰 / 작은 경우 - 가장 큰 값보다 크냐?/가장 작은 값보다 작냐?
-- EXIST / NOT EXIST : 서브쿼리에만 사용하는 연산자로 서브쿼리의 결과중에서 만족하는 값이 하나라도 존재하면 참
--                     값이 존재하는가? / 존재하지않는가?
				
-- 부서별 최고급여를 받는 직원의 정보를 조회

				
SELECT *
FROM EMP
WHERE SAL IN (SELECT MAX(SAL)
				FROM EMP
				GROUP BY DEPTNO)
ORDER BY SAL DESC;
			

-- 관리자에 해당하는 직원에 대한 정보와 관리자가 아닌직원의 정보를 추출하여 조회 
-- 사번, 이름 , 부서명 , '관리자' AS 구분 / '직원' AS 구분

SELECT * FROM EMP;

SELECT * FROM EMP A
WHERE EMPNO IN (SELECT DISTINCT  MGR FROM EMP B WHERE MGR IS NOT NULL AND MGR!=0);

--- 연습하기
SELECT 
A.*
FROM (
	SELECT 
	A.EMPNO,
	A.ENAME,
	B.DNAME,
	'관리자' 구분


	FROM EMP A
	LEFT JOIN DEPT B ON A.DEPTNO =B.DEPTNO 
	WHERE A.EMPNO IN (
					SELECT 
					DISTINCT  MGR 
					FROM EMP B 
					WHERE MGR IS NOT NULL AND MGR!=0)
				
	UNION	
				
				
	SELECT 
		A.EMPNO,
		A.ENAME,
		B.DNAME,
		'직원' 구분
	
	
	FROM EMP A
	LEFT JOIN DEPT B ON A.DEPTNO =B.DEPTNO 
	WHERE A.EMPNO NOT IN (
					SELECT 
					DISTINCT  MGR 
					FROM EMP B 
					WHERE MGR IS NOT NULL AND MGR!=0)

) A
ORDER BY A.EMPNO DESC;



-- 
SELECT 
		A.EMPNO,
		A.ENAME,
		B.DNAME,
		CASE 
			WHEN A.EMPNO IN(SELECT 
						DISTINCT  MGR 
						FROM EMP B 
						WHERE MGR IS NOT NULL AND MGR!=0) THEN '관리자'
			ELSE '직원'	
		END AS 구분
		
	
	
FROM EMP A
LEFT JOIN DEPT B ON A.DEPTNO =B.DEPTNO

ORDER BY 구분 DESC;



--EXISTS : 서브쿼리의 결과 중에서 만족하는 값이 하나라도 존재하면 참
-- 참, 거짓 서브쿼리안에 값이 있는지 없는지 
-- 서브쿼리 결과가 참이면 메인쿼리를 실행, 서브쿼리 결과가 거짓이면 메인쿼리를 실행하지않는다.

SELECT 
    A.ENAME
    , A.MGR
FROM EMP A
WHERE EXISTS(SELECT     
                B.ENAME
             FROM EMP B
             --WHERE NVL(B.SAL,0) >= 10000);
			 WHERE NVL(B.SAL,0) >= 5000);
			

-- 다중열 서브쿼리 
--> 서브쿼리의 조회결과 컬럼의 개수가 여러개일때 (다중행하고는 다르게 결과값이 컬럼이 여러개!!)

			
-- 직원들 중에서 부서에서  최고 급여를 받는 직원의  정보 조회
			
SELECT DEPTNO , MAX(SAL)
FROM EMP
GROUP BY DEPTNO;

			



SELECT * FROM EMP
WHERE (DEPTNO, SAL) IN (			
					SELECT DEPTNO , MAX(SAL)
					FROM EMP
					GROUP BY DEPTNO);
				

SELECT * FROM EMP
WHERE (DEPTNO, TO_DATE(SYSDATE)-TO_DATE(HIREDATE)) IN (			
					SELECT DEPTNO , MAX(TO_DATE(SYSDATE)-TO_DATE(HIREDATE))
					FROM EMP
					GROUP BY DEPTNO);
				


				


















