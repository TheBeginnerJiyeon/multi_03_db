-- CONNECTION: url=jdbc:oracle:thin:@//localhost:1521/XE
-- New script in HR.
-- Connection Type: dev 
-- Url: jdbc:oracle:thin:@//localhost:1521/XE
-- workspace : C:\Users\dkswl\OneDrive\Documents\code_upload\Auto_window\multi_it\backend\db\db1
-- Date: 2024. 5. 16.
-- Time: 오전 11:20:51


-- 2. EMPLOYEE_ID70년대 생이면서 성별이 여자이고,
--    성이 Cambrault씨인 직원들의 사원명, 사원번호 , 부서명, 직급명을 조회하시오.
-- ANSI 표준

SELECT 
	A.FIRST_NAME || ' ' ||  A.LAST_NAME AS "사원명",
	A.EMPLOYEE_ID AS "사원번호",
	B.DEPARTMENT_NAME AS "부서명",
	c.JOB_TITLE AS "직급명"	
FROM 
	EMPLOYEES A
LEFT JOIN 
	DEPARTMENTS B 
	ON A.DEPARTMENT_ID = B.DEPARTMENT_ID 
LEFT JOIN 
	JOBS C 
	ON A.JOB_ID  = C.JOB_ID 
WHERE 
	A.LAST_NAME = 'Cambrault';

-- 3. 가장 급여가 적은 직원의 사번, 사원명,
--    SAL, 부서명, 직급명을 조회하시오.
-- ANSI 표준

SELECT 
	A.EMPLOYEE_ID AS "사번",
	A.FIRST_NAME || ' ' ||  A.LAST_NAME AS "사원명",
	A.SALARY AS SAL,
	B.DEPARTMENT_NAME AS "부서명"	
FROM 
	EMPLOYEES A
LEFT JOIN 
	DEPARTMENTS B 
	ON A.DEPARTMENT_ID = B.DEPARTMENT_ID 	
LEFT JOIN 
	JOBS C 
	ON A.JOB_ID = C.JOB_ID 
WHERE 
	A.SALARY = (SELECT 
					MIN(SALARY) 
					FROM EMPLOYEES);


-- 4. 이름에 'sa'자가 들어가는 직원들의
-- 사번, 사원명, 부서명을 조회하시오.
-- ANSI 표준
				
SELECT
	A.EMPLOYEE_ID AS "사번",
	A.FIRST_NAME || ' ' ||  A.LAST_NAME AS "사원명",
	B.DEPARTMENT_NAME AS "부서명"
FROM 
	EMPLOYEES A
LEFT JOIN 
	DEPARTMENTS B 
	ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
WHERE 
	(LOWER(A.FIRST_NAME) || ' ' || LOWER(A.LAST_NAME)) 
	LIKE  '%sa%';
				
				
				
				
-- 5. IT팀에 근무하는 사원명,
--    직급명, 부서코드, 부서명을 조회하시오.
-- ANSI표준

SELECT 
	A.FIRST_NAME || ' ' || A.LAST_NAME AS "사원명",
	A.DEPARTMENT_ID AS "부서코드",
	B.DEPARTMENT_NAME AS "부서명"
FROM
	EMPLOYEES A
LEFT JOIN 
	DEPARTMENTS B
	ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
WHERE
	SUBSTR(A.JOB_ID,1,2) = 'IT';

-- SELECT SUBSTR(JOB_ID  ,1,2) FROM EMPLOYEES ; 


-- 6. COMMISSION_PCT 를 받는 직원들의 사원명,
--    COMMISSION_PCT , 부서명, 근무지역명을 조회하시오.
-- ANSI표준

SELECT 
	A.FIRST_NAME || ' ' || A.LAST_NAME AS "사원명",
	A.COMMISSION_PCT,
	B.DEPARTMENT_NAME AS "부서명",
	E.REGION_NAME  AS "근무지역명"
FROM 
	EMPLOYEES A
LEFT JOIN 
	DEPARTMENTS B 
	ON A.DEPARTMENT_ID = B.DEPARTMENT_ID 
LEFT JOIN
	LOCATIONS C
	ON B.LOCATION_ID = C.LOCATION_ID
LEFT JOIN
	COUNTRIES D
	ON C.COUNTRY_ID = D.COUNTRY_ID 
LEFT JOIN
	REGIONS E
	ON D.REGION_ID = E.REGION_ID 
WHERE
	A.COMMISSION_PCT IS NOT NULL;







-- ANSI 표준
-- 7. 부서코드가 10인 직원들의 사원명,
--    직급명, 부서명, 근무지역명을 조회하시오.

SELECT 
	A.FIRST_NAME || ' ' || A.LAST_NAME AS "사원명",
	J.JOB_TITLE AS "직급명",
	B.DEPARTMENT_NAME AS "부서명",
	E.REGION_NAME  AS "근무지역명"
FROM 
	EMPLOYEES A	
LEFT JOIN
	JOBS J
	ON A.JOB_ID = J.JOB_ID 
LEFT JOIN 
	DEPARTMENTS B 
	ON A.DEPARTMENT_ID = B.DEPARTMENT_ID 
LEFT JOIN
	LOCATIONS C
	ON B.LOCATION_ID = C.LOCATION_ID
LEFT JOIN
	COUNTRIES D
	ON C.COUNTRY_ID = D.COUNTRY_ID 
LEFT JOIN
	REGIONS E
	ON D.REGION_ID = E.REGION_ID 

WHERE
	A.DEPARTMENT_ID = 10;




-- ANSI 표준
-- 8.United States of America(US) Canada(CA)에 근무하는 직원들의
--    사원명, 부서명, 지역명, 국가명을 조회하시오.

SELECT 
	A.FIRST_NAME || ' ' || A.LAST_NAME AS "사원명",
	B.DEPARTMENT_NAME AS "부서명",
	E.REGION_NAME AS "지역명",
	D.COUNTRY_NAME AS "국가명"
FROM 
	EMPLOYEES A
LEFT JOIN 
	DEPARTMENTS B 
	ON A.DEPARTMENT_ID = B.DEPARTMENT_ID 
LEFT JOIN
	LOCATIONS C
	ON B.LOCATION_ID = C.LOCATION_ID
LEFT JOIN
	COUNTRIES D
	ON C.COUNTRY_ID = D.COUNTRY_ID 
LEFT JOIN
	REGIONS E
	ON D.REGION_ID = E.REGION_ID 
WHERE
	D.COUNTRY_ID IN ('US','CA');






-- ANSI 표준
-- 9. 같은 부서에 근무하는 직원들의 사원명, 부서코드,
--     동료이름을 조회하시오.self join 사용

SELECT 
	A.FIRST_NAME || ' ' || A.LAST_NAME AS "사원명",
	A.DEPARTMENT_ID AS "부서코드",
	(SELECT  FROM EMPLOYEES B WHERE ) AS "동료이름"
FROM 
	EMPLOYEES A
LEFT JOIN 
	EMPLOYEES B
	ON A.EMPLOYEE_ID = B.EMPLOYEE_ID 
WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID;





-- 10. COMMISSION_PCT가 없는 직원들 중에서 직급코드가
--     FI_ACCOUNT와 IT_PROG인 직원들의 사원명, 직급명, 급여를 조회하시오.
--     단, join과 IN 사용할 것
-- ANSI 표준


SELECT 
	A.FIRST_NAME || ' ' || A.LAST_NAME AS "사원명",
	J.JOB_TITLE AS "직급명",
	A.SALARY AS "급여"
FROM 
	EMPLOYEES A	
LEFT JOIN
	JOBS J
	ON A.JOB_ID = J.JOB_ID 
WHERE
	A.COMMISSION_PCT IS NULL
	AND J.JOB_ID IN ('FI_ACCOUNT' , 'IT_PROG');






